<div id="upload-zone" class="upload-zone">
    <div class="upload-content">
        <!-- Animated upload icon -->
        <div class="upload-icon-container">
            <svg class="upload-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4"/>
                <polyline points="7,10 12,15 17,10"/>
                <line x1="12" y1="15" x2="12" y2="3"/>
            </svg>
            <div class="upload-pulse"></div>
        </div>
        
        <h2 class="upload-title">Drop images here</h2>
        <p class="upload-subtitle">
            Or click to browse files â€¢ Up to 100 images<br>
            <span class="supported-formats">
                <span class="format-tag">JPG</span>
                <span class="format-tag">PNG</span>
                <span class="format-tag">WebP</span>
                <span class="format-tag">AVIF</span>
                <span class="format-tag">TIFF</span>
            </span>
        </p>
        
        <div class="upload-actions" style="display: none;">
            <button id="browse-files" class="btn btn-primary btn-upload">
                <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"/>
                    <polyline points="14,2 14,8 20,8"/>
                    <line x1="16" y1="13" x2="8" y2="13"/>
                    <line x1="16" y1="17" x2="8" y2="17"/>
                    <polyline points="10,9 9,9 8,9"/>
                </svg>
                <span class="btn-text">Browse Files</span>
                <span class="btn-shortcut">or drag & drop</span>
            </button>
            
            <button id="camera-capture" class="btn btn-secondary btn-upload">
                <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M23 19a2 2 0 01-2 2H3a2 2 0 01-2-2V8a2 2 0 012-2h4l2-3h6l2 3h4a2 2 0 012 2v11z"/>
                    <circle cx="12" cy="13" r="4"/>
                </svg>
                <span class="btn-text">Camera</span>
                <span class="btn-shortcut">mobile only</span>
            </button>
            
        </div>
        
        <!-- Upload limits info -->
        <div class="upload-limits">
            <div class="limit-item">
                <svg class="limit-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"/>
                    <polyline points="14,2 14,8 20,8"/>
                </svg>
                <span>Max 100 files</span>
            </div>
            <div class="limit-item">
                <svg class="limit-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M21 16V8a2 2 0 00-1-1.73l-7-4a2 2 0 00-2 0l-7 4A2 2 0 003 8v8a2 2 0 001 1.73l7 4a2 2 0 002 0l7-4A2 2 0 0021 16z"/>
                    <polyline points="7.5,4.21 12,6.81 16.5,4.21"/>
                    <polyline points="7.5,19.79 7.5,14.6 3,12"/>
                    <polyline points="21,12 16.5,14.6 16.5,19.79"/>
                </svg>
                <span>Up to 10MB each</span>
            </div>
        </div>
    </div>
    
    <!-- Hidden file inputs -->
    <input type="file" id="file-input" multiple accept="image/jpeg,image/jpg,image/png,image/webp,image/avif,image/tiff,image/bmp" style="display: none;">
    <input type="file" id="camera-input" accept="image/*" capture="environment" style="display: none;">
    
    <!-- Drag overlay for better visual feedback -->
    <div class="drag-overlay hidden">
        <div class="drag-content">
            <svg class="drag-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4"/>
                <polyline points="7,10 12,15 17,10"/>
                <line x1="12" y1="15" x2="12" y2="3"/>
            </svg>
            <h3>Drop your images</h3>
            <p>Release to upload</p>
        </div>
    </div>
</div>

<!-- Enhanced upload progress -->
<div id="upload-progress" class="upload-progress hidden">
    <div class="progress-header">
        <h4>Processing Files</h4>
        <button id="cancel-upload" class="btn-cancel" title="Cancel upload">
            <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <line x1="18" y1="6" x2="6" y2="18"/>
                <line x1="6" y1="6" x2="18" y2="18"/>
            </svg>
        </button>
    </div>
    
    <div class="progress-container">
        <div class="progress-bar">
            <div id="upload-progress-fill" class="progress-fill"></div>
        </div>
        <div class="progress-percentage" id="upload-percentage">0%</div>
    </div>
    
    <div class="upload-status">
        <div class="status-info">
            <span id="upload-status-text">Preparing files...</span>
            <span id="upload-file-count" class="file-count">0 / 0 files</span>
        </div>
        <div class="upload-details">
            <span id="upload-speed" class="upload-speed">0 MB/s</span>
            <span id="upload-eta" class="upload-eta">--:--</span>
        </div>
    </div>
    
    <!-- File list preview during upload -->
    <div id="upload-file-list" class="upload-file-list">
        <!-- Files will be added dynamically -->
    </div>
</div>

<!-- Quick actions bar (shown when files are selected) -->
<div id="quick-actions" class="quick-actions hidden">
    <div class="quick-actions-content">
        <div class="selected-count">
            <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
            </svg>
            <span id="selected-file-count">0 files selected</span>
        </div>
        
        <div class="quick-actions-buttons">
            <button id="quick-convert" class="btn btn-primary btn-small">
                <svg class="icon" viewBox="0 0 24 24">
                    <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"/>
                </svg>
                Quick Convert
            </button>
            <button id="clear-selection" class="btn btn-secondary btn-small">
                <svg class="icon" viewBox="0 0 24 24">
                    <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7"/>
                </svg>
                Clear All
            </button>
        </div>
    </div>
</div>

<!-- Paste detection overlay -->
<div id="paste-overlay" class="paste-overlay hidden">
    <div class="paste-content">
        <svg class="paste-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M16 4h2a2 2 0 012 2v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2h2"/>
            <rect x="8" y="2" width="8" height="4" rx="1" ry="1"/>
        </svg>
        <h3>Image detected in clipboard</h3>
        <p>Press Ctrl+V (or Cmd+V) to paste</p>
        <button id="dismiss-paste" class="btn btn-secondary btn-small">Dismiss</button>
    </div>
</div>

<script>
// Enhanced upload zone functionality
document.addEventListener('DOMContentLoaded', function() {
    const uploadZone = document.getElementById('upload-zone');
    const dragOverlay = uploadZone.querySelector('.drag-overlay');
    const quickActions = document.getElementById('quick-actions');
    const pasteOverlay = document.getElementById('paste-overlay');
    
    // Enhanced drag and drop with better visual feedback
    let dragCounter = 0;
    
    uploadZone.addEventListener('dragenter', function(e) {
        e.preventDefault();
        dragCounter++;
        uploadZone.classList.add('drag-active');
        dragOverlay.classList.remove('hidden');
    });
    
    uploadZone.addEventListener('dragleave', function(e) {
        e.preventDefault();
        dragCounter--;
        if (dragCounter === 0) {
            uploadZone.classList.remove('drag-active');
            dragOverlay.classList.add('hidden');
        }
    });
    
    uploadZone.addEventListener('dragover', function(e) {
        e.preventDefault();
    });
    
    uploadZone.addEventListener('drop', function(e) {
        e.preventDefault();
        dragCounter = 0;
        uploadZone.classList.remove('drag-active');
        dragOverlay.classList.add('hidden');
        
        const files = Array.from(e.dataTransfer.files);
        if (window.app) {
            window.app.processFiles(files);
        }
    });
    
    // Clipboard paste support
    document.addEventListener('paste', function(e) {
        const items = e.clipboardData.items;
        const imageFiles = [];
        
        for (let item of items) {
            if (item.type.indexOf('image') !== -1) {
                const file = item.getAsFile();
                imageFiles.push(file);
            }
        }
        
        if (imageFiles.length > 0 && window.app) {
            window.app.processFiles(imageFiles);
        }
    });
    
    // Quick actions functionality
    document.getElementById('quick-convert')?.addEventListener('click', function() {
        if (window.app && window.app.uploadedImages.length > 0) {
            window.app.startProcessing();
        }
    });
    
    document.getElementById('clear-selection')?.addEventListener('click', function() {
        if (window.app) {
            window.app.clearAllImages();
        }
    });
    
    // Cancel upload functionality
    document.getElementById('cancel-upload')?.addEventListener('click', function() {
        // Implementation depends on your upload cancellation logic
        console.log('Upload cancelled');
    });
    
    // Dismiss paste overlay
    document.getElementById('dismiss-paste')?.addEventListener('click', function() {
        pasteOverlay.classList.add('hidden');
    });
    
    // Auto-hide paste overlay after 5 seconds
    setTimeout(() => {
        if (pasteOverlay && !pasteOverlay.classList.contains('hidden')) {
            pasteOverlay.classList.add('hidden');
        }
    }, 5000);
});
</script>